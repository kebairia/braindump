* ðŸ§  Braindump
#+html: <p align="center">
#+html: <p align="center"><b>This repo is still under construction</p>
#+html: <img src="./files/img/const.png" alt="contruction image" width="200">
#+html: </p>

#+html: <p align="center">
#+html: <img src="./files/img/zkbd-logo.png" alt="ZK-braindump logo">
#+html: </p>

#+begin_quote
Hi, my name is *Zakaria.K*, and this is my *braindump*.
This repository contains my ``[[file:org-files/20210106222617-zettelkasten.org][Zettelkasten]]-based'' working/study/reading notes.
They're in a messy state right now, but they'll be improved as I get used to the method.
The majority of them are literature notes that I took while reading.

I intend to create a dedicated website for them in the near future.

Have a good time!
#+end_quote

#+HTML: <details><summary><b>What is Zettelkasten</b></summary>

 Zettelkasten is a note taking method that tries to mimic the brain neurons structure, invented by [[file:org-files/20210106222747-niklas_luhman.org][niklas luhman]]
#+HTML: </details>

#+HTML: <details><summary><b>Ressources</b></summary>
 their are two papers written by niklas luhman, and they are translated and uploaded on this [[https://luhmann.surge.sh/][site]].\\

 a dedicated [[https://zettelkasten.de/][site]] introducing and explaining the zettelkasten method.

 [[https://www.amazon.com/-/es/S%C3%B6nke-Ahrens-ebook/dp/B06WVYW33Y/ref=sr_1_1?__mk_es_US=%C3%85M%C3%85%C5%BD%C3%95%C3%91&dchild=1&keywords=how+to+take+better+notes&qid=1631800481&sr=8-1][How to take smart notes]], a book explaining the method 
#+HTML: </details>
#+HTML: <details><summary><b>Screenshoot</b></summary>
[[file:./files/img/org-roam-ui-01.png]]
[[file:./files/img/org-roam-ui-02.png]]
[[file:./files/img/org-roam-ui-03.png]]
[[file:./files/img/org-roam-ui-04.png]]
[[file:./files/img/org-roam-ui-05.png]]
[[file:./files/img/org-roam-ui-06.png]]
#+HTML: </details>

#+HTML: <details><summary><b>Configuration</b></summary>
*** Global config 
  #+begin_src emacs-lisp
  (use-package org-roam
    ;; use org-roam v2
    :init
    (setq org-roam-v2-ack t)
    :custom
    (org-roam-directory (file-truename "/home/zakaria/dox/braindump/org-files"))
    (org-roam-completion-everywhere t)
    :bind (("C-c n l" . org-roam-buffer-toggle)
           ("C-c n f" . org-roam-node-find)
           ("C-c n g" . org-roam-graph)
           ("C-c n G" . org-roam-ui-mode)
           ("C-c n i" . org-roam-node-insert)
           ("C-c n t" . org-roam-tag-add)
           ("C-c n r" . org-roam-ref-add)
           ("C-c n c" . org-roam-capture)
           ;; Dailies
           ("C-c n j" . org-roam-dailies-capture-today)
           :map org-roam-dailies-map
           ("y" . org-roam-dailies-capture-yesterday)
           ("t" . org-roam-dailies-capture-tomorrow)
           :map org-mode-map
           ("C-M-i" . completion-at-point))
    :bind-keymap
    ("C-c n d" . org-roam-dailies-map)
    :config
    (org-roam-db-autosync-mode)
    (setq org-roam-dailies-directory "/home/zakaria/dox/braindump/org-files/daily")
    ;; If using org-roam-protocol
    (load "~/.config/emacs/straight/repos/org-roam/extensions/org-roam-dailies.el")
    (load "~/.config/emacs/straight/repos/org-roam/extensions/org-roam-graph.el") 
    (load "~/.config/emacs/straight/repos/org-roam/extensions/org-roam-protocol.el") 
    (require 'org-roam-protocol))
  
  ;;Configuring the Org-roam buffer display
  (add-to-list 'display-buffer-alist
               '("\\*org-roam\\*"
                 (display-buffer-in-direction)
                 (direction . right)
                 (window-width . 0.33)
                 (window-height . fit-window-to-buffer)))
  ;; Garbage Collection
  (setq org-roam-db-gc-threshold most-positive-fixnum)
  
  
  ;;   )
  #+end_src
*** org-roam-ui
  #+begin_src emacs-lisp
  (use-package org-roam-ui
    :straight
    (:host github :repo "org-roam/org-roam-ui" :branch "main" :files ("*.el" "out"))
    :after org-roam
    ;; :hook
    ;;         normally we'd recommend hooking orui after org-roam, but since org-roam does not have
    ;;         a hookable mode anymore, you're advised to pick something yourself
    ;;         if you don't care about startup time, use
    ;;  :hook (after-init . org-roam-ui-mode)
    :config
    (setq org-roam-ui-sync-theme nil
          org-roam-ui-follow t
          org-roam-ui-update-on-save t
          org-roam-ui-open-on-start t))
  
  ;; (setq org-roam-ui-custom-theme
  ;;       '((bg . "#1d2021")
  ;;         (bg-alt . "#282a36")
  ;;         (fg . "#f8f8f2")
  ;;         (fg-alt . "#6272a4")
  ;;         (red . "#ff5555")
  ;;         (orange . "#f1fa8c")
  ;;         (yellow ."#ffb86c")
  ;;         (green . "#50fa7b")
  ;;         (cyan . "#8be9fd")
  ;;         (blue . "#ff79c6")
  ;;         (violet . "#8be9fd")
  ;;         (magenta . "#bd93f9")))
  #+end_src
*** org roam graph
  - i'm using org-roam-ui now with org-roam-v2,
  this will be removed after the first stable version of org-roam-ui
  #+begin_src emacs-lisp
  (setq org-roam-graph-viewer
        (lambda (file)
          (let ((org-roam-graph-viewer "/usr/bin/brave"))
            (org-roam-graph--open (concat "file://///" file)))))
  #+end_src
*** Deft
  - The Deft interface can slow down quickly when the number of files get huge.
  - ~Notdeft~ is a fork of Deft that uses an external search engine and indexer.
  #+begin_src emacs-lisp
  ;; disable linum-mode (line number)
  (add-hook 'deft
            '(lambda () (linum-mode nil)))
  (use-package deft
    :commands (deft)
    :custom       (deft-directory "~/org/notes" )
    (deft-recursive t)
    (deft-extensions '("org" "md" "txt") )
    (deft-use-filename-as-title t)
    (deft-file-naming-rules
      '((noslash . "-")
        (nospace . "-")
        (case-fn . downcase))
      deft-org-mode-title-prefix t
      deft-text-mode 'org-mode))
  
  
  #+end_src
#+end_src
#+HTML: </details>
